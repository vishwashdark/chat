{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "import pandas as pd\n",
    "\n",
    "# 1. Main Tank/Vessel Data\n",
    "def create_main_tank_csv():\n",
    "    data = [\n",
    "        {\n",
    "            'asset_id': 'MAIN_VESSEL',\n",
    "            'type': 'pressure_vessel',\n",
    "            'x': 2800,\n",
    "            'y': 1800,\n",
    "            'w': 400,\n",
    "            'h': 600,\n",
    "            'equipment_number': '31V-1305'\n",
    "        }\n",
    "    ]\n",
    "    \n",
    "    df = pd.DataFrame(data)\n",
    "    df.to_csv('main_tank.csv', index=False)\n",
    "\n",
    "# 2. Asset Relationships\n",
    "def create_asset_relationships_csv():\n",
    "    data = [\n",
    "        {'source_asset': '31E-1103', 'target_asset': '31V-1305', 'connection_type': 'feed_gas_makeup', 'flow_direction': 'input'},\n",
    "        {'source_asset': '31V-1305', 'target_asset': 'FUEL_GAS_HEADER', 'connection_type': 'process_output', 'flow_direction': 'output'},\n",
    "        {'source_asset': '34HC-140', 'target_asset': '31V-1305', 'connection_type': 'flow_control', 'flow_direction': 'control'}\n",
    "    ]\n",
    "    \n",
    "    df = pd.DataFrame(data)\n",
    "    df.to_csv('asset_relationships.csv', index=False)\n",
    "\n",
    "# 3. Major Components\n",
    "def create_major_components_csv():\n",
    "    data = [\n",
    "        {'asset_id': 'VALVE_LEFT_1', 'type': 'valve', 'location': '868_3304', 'connected_to': '31V-1305_inlet'},\n",
    "        {'asset_id': 'VALVE_LEFT_2', 'type': 'valve', 'location': '3668_3364', 'connected_to': '31V-1305_outlet'},\n",
    "        {'asset_id': 'PG_1', 'type': 'pressuregate', 'location': '3162_383', 'connected_to': '31V-1305_monitoring'},\n",
    "        {'asset_id': 'PG_2', 'type': 'pressuregate', 'location': '2502_133', 'connected_to': '31V-1305_monitoring'},\n",
    "        {'asset_id': 'VALVE_CONTROL_1', 'type': 'open_valve_right', 'location': '1289_3335', 'connected_to': 'feed_gas_line'}\n",
    "    ]\n",
    "    \n",
    "    df = pd.DataFrame(data)\n",
    "    df.to_csv('major_components.csv', index=False)\n",
    "\n",
    "# 4. Flow Paths\n",
    "def create_flow_paths_csv():\n",
    "    data = [\n",
    "        {'path_id': 'FP_1', 'from_asset': '31E-1103', 'to_asset': '31V-1305', 'via_component': '34HC-140', 'flow_type': 'feed_gas'},\n",
    "        {'path_id': 'FP_2', 'from_asset': '31V-1305', 'to_asset': 'FUEL_GAS_HEADER', 'via_component': 'VALVE_LEFT_2', 'flow_type': 'process_gas'},\n",
    "        {'path_id': 'FP_3', 'from_asset': '31V-1305', 'to_asset': 'REGEN_GAS_LINE', 'via_component': 'VALVE_LEFT_1', 'flow_type': 'regen_gas'}\n",
    "    ]\n",
    "    \n",
    "    df = pd.DataFrame(data)\n",
    "    df.to_csv('flow_paths.csv', index=False)\n",
    "\n",
    "# 5. Create a function to generate all CSVs\n",
    "def generate_all_csvs():\n",
    "    create_main_tank_csv()\n",
    "    create_asset_relationships_csv()\n",
    "    create_major_components_csv()\n",
    "    create_flow_paths_csv()\n",
    "    print(\"All CSV files have been generated successfully!\")\n",
    "\n",
    "# Execute the main function\n",
    "if __name__ == \"__main__\":\n",
    "    generate_all_csvs()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
